//PRODUTO

//METODOS PARA CLASSE PRODUTO - GET E SETs
public class Produto {
    private int cd_produto;
    private String ds_produto;
    private double vl_Produto;
    private double qt_Produto;
    private int cd_unidade;

    public int getCd_produto() {
        return cd_produto;
    }

    public Produto(int cd_produto, String ds_produto, double vl_Produto, double qt_Produto, int cd_unidade) {

        this.setCd_produto(cd_produto);
        this.setDs_produto(ds_produto);
        this.setVl_Produto(vl_Produto);
        this.setQt_Produto(qt_Produto);
        this.setCd_unidade(cd_unidade);
    }

    public Produto() {
    }

    public void setCd_produto(int cd_produto) {
        this.cd_produto = cd_produto;
    }

    public String getDs_produto() {
        return ds_produto;
    }

    public void setDs_produto(String ds_produto) {
        this.ds_produto = ds_produto;
    }

    public double getVl_Produto() {
        return vl_Produto;
    }

    public void setVl_Produto(double vl_Produto) {
        this.vl_Produto = vl_Produto;
    }

    public double getQt_Produto() {
        return qt_Produto;
    }

    public void setQt_Produto(double qt_Produto) {
        this.qt_Produto = qt_Produto;
    }

    public int getCd_unidade() {
        return cd_unidade;
    }

    public void setCd_unidade(int cd_unidade) {
        this.cd_unidade = cd_unidade;
    }
}

//UNIDADE

//METODO PARA CLASSE UNDIADE GET AND SETs
public class Unidade {

    private int cd_unidade;
    private String ds_unidade;

    public Unidade(int cd_unidade, String ds_unidade) {
        this.setCd_unidade(cd_unidade);
        this.setDs_unidade(ds_unidade);
    }

    public Unidade() {
    }

    public int getCd_unidade() {
        return cd_unidade;
    }

    public void setCd_unidade(int cd_unidade) {
        this.cd_unidade = cd_unidade;
    }

    public String getDs_unidade() {
        return ds_unidade;
    }

    public void setDs_unidade(String ds_unidade) {
        this.ds_unidade = ds_unidade;
    }
}


//CONEXAO

import com.sun.jdi.PathSearchingVirtualMachine;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Conexao {
    private String caminho = "jdbc:mysql://localhost:3306/comabem";
    private String usuario = "root";
    private String Senha = "1berto0754";
    public Connection conn;

    public void conexao()//efetua conexao com banco de dados
    {
        try {
            conn=DriverManager.getConnection(caminho,usuario,Senha);
            System.out.println("Conectado com sucesso!");
        } catch (SQLException ex) {
            Logger.getLogger(Conexao.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void desconecta() // desconecta com banco de dados
    {
        try {
            conn.close();//fecha conexão
            System.out.println("DESConectado com sucesso!");//reporta que a conexão foi fechada

        }
        catch (SQLException ex)
        {
            Logger.getLogger(Conexao.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("ERRO AO FECHAR CONEXAO!"); //reporta erro ao fechar a conexão
        }
    }

    public static void main(String[] args) {
        Conexao obj_conexao = new Conexao();
        obj_conexao.conexao();
    }
}


//DAO
import com.mysql.cj.xdevapi.Column;
import com.mysql.cj.xdevapi.JsonParser;

import java.sql.*;

public class DAO_produtos
{
    Conexao obj_conexao = new Conexao(); // realiza conexao com BD

    public void consultar()
            //comando realiza conexão para consulta
    {
        obj_conexao.conexao();
        Statement stm = null;
        ResultSet rs = null;
        // 47 min
        try {
            stm = obj_conexao.conn.createStatement();
            rs = stm.executeQuery("select * from produtos");
            while(rs.next())
                System.out.println(rs.getInt(1)+
                       " " + rs.getString(2) +
                        " " + rs.getDouble(3) +
                        " " + rs.getDouble(4) +
                        " " + rs.getInt(5));
            obj_conexao.desconecta();

        }
        catch (SQLException e)
        {
           e.printStackTrace();
        }


    }

    public void inserir(Produto p)
    //comando realiza conexão para inserção
    {
        obj_conexao.conexao();
        PreparedStatement pst = null;
        String sql = "INSERT INTO Produtos (cd_produto, ds_produto, vl_produto, qt_produto, cd_unidade) VALUES(?,?,?,?,?)";
        // 47 min
        try {
            pst = obj_conexao.conn.prepareStatement(sql);
            pst.setInt(1,p.getCd_produto());
            pst.setString(2,p.getDs_produto());
            pst.setDouble(3,p.getVl_Produto());
            pst.setDouble(4,p.getQt_Produto());
            pst.setInt(5,p.getCd_unidade());
            pst.execute();
            obj_conexao.desconecta();

        }
        catch (SQLException e)
        {
            e.printStackTrace();
        }


    }


    public void alterar(Produto p)
    //comando realiza conexão para alteração
    {
        obj_conexao.conexao();
        PreparedStatement pst = null;
        String sql = "UPTADE Produtos SET ds_produto=?, vl_produto=?, qt_produto=?, cd_unidade=? WHERE cd_produto = ?";
        try {
            pst = obj_conexao.conn.prepareStatement(sql);

            pst.setString(1, p.getDs_produto());
            pst.setDouble(2, p.getVl_Produto());
            pst.setDouble(3, p.getQt_Produto());
            pst.setInt(4, p.getCd_unidade());
            pst.setInt(5, p.getCd_produto());
            pst.execute();
            obj_conexao.desconecta();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
        public void excluir(int id)
        //comando realiza conexão para exclusão
        {
            obj_conexao.conexao();
            PreparedStatement pst = null;
            String sql = "DELETE FROM Produtos WHERE cd_produto=?";
            try {
                pst = obj_conexao.conn.prepareStatement(sql);
                pst.setInt(1, id);
                pst.execute();
                obj_conexao.desconecta();

            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

//PRINCIPAL

public class Principal {
    public static void main(String[] args) {
        DAO_produtos obj_produtos = new DAO_produtos();

        //Consultar Produtos
        //obj_produtos.consultar();

        //Inserir produtos

        //Produto novoProduto = new Produto(7,"Miojo",5.00,10,1);
        //obj_produtos.inserir(novoProduto);

        //Alterar produto
       // Produto produtoalterado = new Produto(7,"Miojo alterado", 2.5,1,2);
        //obj_produtos.alterar(produtoalterado);

        // EXCLUIR PRODUTO
        obj_produtos.excluir(4);
    }
}
